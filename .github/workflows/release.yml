name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup Bun
      uses: oven-sh/setup-bun@v1

    - name: Install dependencies
      run: bun install

    - name: Build project
      run: bun run build

    - name: Run tests
      run: bun run test

    - name: Create release notes
      id: release_notes
      run: |
        # Extract version from tag
        VERSION=${GITHUB_REF#refs/tags/}
        echo "version=$VERSION" >> $GITHUB_OUTPUT

        # Generate release notes from CHANGELOG.md
        if [ -f CHANGELOG.md ]; then
          # Extract the section for this version from CHANGELOG.md
          awk "/^## \[$VERSION\]/{flag=1; next} /^## \[/{flag=0} flag" CHANGELOG.md > release_notes.txt
          if [ -s release_notes.txt ]; then
            echo "Found release notes in CHANGELOG.md"
          else
            echo "No release notes found in CHANGELOG.md for $VERSION"
            echo "Release $VERSION" > release_notes.txt
          fi
        else
          echo "Release $VERSION" > release_notes.txt
        fi

    - name: Create GitHub Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: PolarisAI ${{ steps.release_notes.outputs.version }}
        body_path: release_notes.txt
        draft: false
        prerelease: ${{ contains(github.ref, '-') }}

    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: build-${{ steps.release_notes.outputs.version }}
        path: .next/
